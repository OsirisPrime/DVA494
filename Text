library ieee;
use ieee.std_logic_1164.all;

entity Mux2to1 is
    port(
        i0      : in std_logic;
        i1      : in std_logic;
        s0      : in std_logic;
        out0    : out std_logic
        );
end;

architecture Mux2to1_arch of Mux2to1 is
    signal T1 : std_logic;
    signal T2 : std_logic;
    begin
        T1 <= s0 and i1;
        T2 <= i0 and (not s0);
        out0 <= T1 and T2;
end;


library ieee;
use ieee.std_logic_1164.all;

entity test_mux2to1 is end;

architecture test_arch of test_mux2to1 is
    component Mux2to1 is
        port(
        i0      : in std_logic;
        i1      : in std_logic;
        s0      : in std_logic;
        out0    : out std_logic
        );
    end component;
    signal i0, i1, s0, out0 : std_logic;
    begin
        test_instance : Mux2to1 port map(i0, i1, s0, out0);
        process is
            begin
                s0 <= '0';
                i0 <= '0';
                i1 <= '0';
                wait for 10 ps;
                
                s0 <= '0';
                i0 <= '0';
                i1 <= '1';
                wait for 10 ps;
                
                s0 <= '0';
                i0 <= '1';
                i1 <= '0';
                wait for 10 ps;
                
                s0 <= '0';
                i0 <= '1';
                i1 <= '1';
                wait for 10 ps;
                
                s0 <= '1';
                i0 <= '0';
                i1 <= '0';
                wait for 10 ps;
                
                s0 <= '1';
                i0 <= '0';
                i1 <= '1';
                wait for 10 ps;
                
                s0 <= '1';
                i0 <= '1';
                i1 <= '0';
                wait for 10 ps;
                
                s0 <= '1';
                i0 <= '1';
                i1 <= '1';
                wait for 10 ps;
            end;
    end;
